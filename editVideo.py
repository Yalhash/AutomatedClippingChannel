from sortParseDown import getAllVids
import os
import subprocess

#for windows this is the case, for *nix machines switch this out to /
PATHSEPERATOR = '\\'
#for windows this is the case, for *nix machines switch this out to \
ESCAPECHARACTER = '^'

def escapeWhiteSpace(unsanitizedStr):
    '''
    unsanitizedStr: string, a string that could have whitespaces
    returns: string, the same string but with '\' before each whitesapce
    '''
    return unsanitizedStr.replace(' ', ESCAPECHARACTER + ' ')

def clearAssets():
    '''
    deletes all old videos from assets
    basically want to do rm *.mp4
    '''
    assets = 'assets'
    for file in os.listdir(assets):
        path = os.path.join(assets, file)
        try:
            if os.path.isfile(path) and (path[-4:] == '.mp4' or path[-4:] == '.sub' or path[-4:] == '.ass'):
                os.unlink(path)
        except Exception as e:
            print(e)
    

def joinVideos(vid1, vid2, finalName):
    '''
    vid1: string, name of first video
    vid2: string, name of second video
    finalName: string, name of final video
    (Note: names do not include directories or file extentions)
    '''
    pass


def makeSubtitle(fileName):
    '''
    fileName: string, the name of a file to make the title card for
    returns: string, the name of the subtitle file
    spits out a .ass file to be attatched to the video later
    the returning fileName will be the same as the original, except whitespaces will be replaced with underscores
    (makes a ~2 second subtitle of the title of the clip)
    '''
    COLOURCODE = 'ffffff'
    FONTSIZE = '36'
    FONT = 'Arial'
    title = fileName.split('_')[0]
    with open('assets/'+title.replace(' ', '_') + '.ass', 'w') as subFile:
        #script info/preamble
        subFile.write('[Script Info]\n')
        subFile.write(';Generated by Clip Grabber :)\n')
        subFile.write('ScriptType: v4.00+\n')
        subFile.write('PlayResX: 384\n')
        subFile.write('PlayResY: 288\n\n')
        subFile.write('[V4+ Styles]\n')
        subFile.write('Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n')
        subFile.write('Style: Default,'+FONT+','+ FONTSIZE+ ',&'+ COLOURCODE + ',&H' + COLOURCODE + ',&H' + COLOURCODE + ',&H' + COLOURCODE + ',0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0\n\n')
        subFile.write('[Events]\n\n')
        subFile.write('Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n')
        subFile.write('Dialogue: 0,0:00:1.00,0:00:04.00,Default,,0,0,0,,'+title + '\n')
    return title

def applySubtitle(fileName, subName):
    '''
    fileName: string, the name of a file apply the subtitles to
    returns: string, the name of the new .mp4 file with subtitles burned in
    (Note: this filename is the same as the given filename but with _sub at the end)
    '''
    
    #I CANT GET THIS TO RUN PROPERLY, THIS WILL BE THE STRAW THAT BROKE MY BACK, AND SENT ME INTO A MURDEROUS RAMPAGE

    #ffmpeg/ffmpeg.exe -i <name> -vf "ass=<subName>" <outputName>
    newFile = fileName + '_sub'
    print(fileName)
    #'ffmpeg'+ PATHSEPERATOR+'ffmpeg.exe -i assets'+ PATHSEPERATOR + fileName +'.mp4" -vf "ass=assets' + PATHSEPERATOR + subName + '.ass" assets' + PATHSEPERATOR + escapeWhiteSpace(newFile)+'.mp4 -y'
    subprocess.Popen(['ffmpeg/ffmpeg.exe',  '-i',  '"assets'+fileName+'.mp4"', '-vf',  '"ass=assets/' + subName+ '.ass"',  '"assets/'+newFile+ '.mp4"',  '-y'], shell=False)

    return newFile







if __name__ == "__main__":
    file = '3 hard knees into SACRED_wizzrobe_26_976_3-days-ago'
    subFile = makeSubtitle(file)
    print(applySubtitle(file, subFile))


