import os

#This is for windows, if you are on *nix, change to '/'

#-----------------------------------------------HELPER FUNCTIONS-----------------------------------------------------
def joinVideos(vidList, finalName):
    '''
    vidList: a list of video names to join together
    finalName: string, name of final video
    (Note: before joining videos, videos must be remuxed so all of their codecs are the same)
    (Note 2: names do not include directories or file extentions)
    ffmpeg -y -f concat -i tempList.txt -c copy <finalVideo>
    '''
    with open('assets/tempList.txt', 'w') as listFile:
        for i in vidList: #assets/
            listFile.write("file '"+ i + ".mp4'\n") 

    os.system('ffmpeg -y -f concat -safe 0 -i assets/tempList.txt -c copy "finalVids/' +finalName +'.mp4"')
    

def remuxVids(vidList):
    '''
    vidList: list<str>, list of video names to remux
    returns: list<str>, list of final video names
    ffmpeg -y -i <vidName> -c:v h264 -c:a aac <finalName>
    (Note: final names are just original filenames with _fin appended)
    '''
    finalList = []
    for fileName in vidList:
        tempFinal = fileName + '_fin'
        os.system('ffmpeg -y -i "assets/' + fileName + '.mp4" -c:v h264 -c:a aac  "assets/' + tempFinal + '.mp4"')
        finalList.append(tempFinal)

    return finalList


def makeSubtitle(fileName):
    '''
    fileName: string, the name of a file to make the title card for
    returns: string, the name of the subtitle file
    spits out a .ass file to be attatched to the video later
    the returning fileName will be the same as the original, except whitespaces will be replaced with underscores
    (makes a ~2 second subtitle of the title of the clip)
    '''
    
    primaryColour = 'a54164' 
    secondaryColour = '000000'
    
    backColour = 'FFFFFF'
    FONTSIZE = '28'
    #FONTS NOT WORKING IDK WHY, JUST DEFAULTS TO ARIAL
    FONT = 'Courier'    #'Atle Haas Grotesk' 
    title = fileName.split('_')[0]
    fileName = title.replace(' ', '_')

    with open('assets/'+ fileName + '.ass', 'w') as subFile:
        #script info/preamble
        subFile.write('[Script Info]\n')
        subFile.write(';Generated by Clip Grabber :)\n')
        subFile.write('ScriptType: v4.00+\n')
        subFile.write('PlayResX: 384\n')
        subFile.write('PlayResY: 288\n\n')
        subFile.write('[V4+ Styles]\n')
        subFile.write('Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n')
        subFile.write('Style: Default,'+FONT+','+ FONTSIZE+ ',&H'+ primaryColour + ',&H' + secondaryColour + ',&H' + primaryColour + ',&H' + backColour + ',0,0,0,0,100,100,0,0,0,1,0,2,10,10,10,0\n\n')
        subFile.write('[Events]\n\n')
        subFile.write('Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n')
        subFile.write('Dialogue: 0,0:00:00.00,0:00:04.00,Default,,0,0,0,,'+title + '\n')
    
    return fileName

def applySubtitle(fileName, subName):
    '''
    fileName: string, the name of a file apply the subtitles to
    returns: string, the name of the new .mp4 file with subtitles burned in
    (Note: this filename is the same as the given filename but with _sub at the end)
    ffmpeg/ffmpeg.exe -i <name> -vf "ass=<subName>" <outputName>
    '''
    
    newFile = fileName + '_sub'
    #'ffmpeg -i assets'+ PATHSEPERATOR + fileName +'.mp4" -vf "ass=assets' + PATHSEPERATOR + subName + '.ass" assets' + PATHSEPERATOR + escapeWhiteSpace(newFile)+'.mp4 -y'
    #'+ subName + '.ass
    os.system('ffmpeg  -y -i "assets/'+ fileName + '.mp4" -vf "ass=assets/'+ subName + '.ass" "assets/'+newFile+'.mp4"')
    return newFile


#-----------------------------------------------------FINAL FUNCTIONS--------------------------------------------------------------

def concatVideos(vidList, finalName):
    '''
    vidList: list<str>, list of video names to add together
    finalName: str, name of the final Video
    '''
    finVidList = remuxVids(vidList)
    joinVideos(finVidList, finalName)



def subAllVideos(vidList):
    '''
    vidList: list<str>, list of all videos to make subtitles of
    returns: list<str>, list of all videos with subtitles attatched
    '''
    subList = []
    for video in vidList:
        tempSub = makeSubtitle(video)
        subName = applySubtitle(video, tempSub)
        subList.append(subName)
    
    return subList
    

def makeVideo(videoList):
    '''
    metaDataList: a list of video name
    returns: the name of the final Video
    takes in the list of metaData and puts subtitles on all of them,
    and then concatinates them
    '''
    #final Name should be the video with the most views
    #since metaDataList is sorted by default we take first
    finalName = videoList[0].split('_')[0]

    subList = subAllVideos(videoList)    
    concatVideos(subList, finalName)
    return finalName

if __name__ == "__main__":
    vidList = ['BIG SCHLICE_mang0_26_3000_2-days-ago', 'Alex19 thinks Grand Finals is Fake News_mach1alex19_30_415_5-days-ago', "alex19s view on ludwig_mach1alex19_38_196_4-days-ago"]
    makeVideo(vidList)
    
    


